name: Test And Build
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_PASSWORD_TEST: ${{secrets.DB_PASSWORD_TEST}}
      DB_HOST_TEST: ${{secrets.DB_HOST_TEST}}
      DB_NAME_TEST: ${{secrets.DB_NAME_TEST}}
      DB_USER_TEST: ${{secrets.DB_USER_TEST}}
      DB_PORT_TEST: ${{secrets.DB_PORT_TEST}}
      TEST_ENVIRONMENT: 1
      SECRET_JWT: ${{secrets.SECRET_JWT}}
    steps:
      - name: Echo message
        run: |
          echo "hello test"

      - uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: run test
        run: |
          pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Echo message
        run: |
          echo "hello lint"

      - uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: run lint
        run: |
          pylint app.py

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Echo message
        run: |
          echo "hello build"

      - uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Install Docker (if necessary)
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      # Build dependencies in Amazon Linux environment
      - name: Build dependencies compatible with AWS Lambda
        run: |
          | docker run --rm -v "$PWD":/var/task lambci/lambda:build-python3.8 \ 
          /bin/sh -c "pip install -r requirements.txt -t /var/task/; exit"
        
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt -t .
      #     echo "Change required folder to match fastapi lambda function"

      - name: Package application
        run: | # Do not include git and pycache files
          zip -r package.zip . -x "*.git*" "*__pycache__*"

      - name: Deploy to AWS Lambda
        uses: appleboy/lambda-action@v0.2.0
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: 'us-east-1'
          function_name: 'fastapiApp'
          zip_file: 'package.zip'